<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deploy on ZHB's Blog</title><link>https://blog.gkzhb.top/categories/deploy/</link><description>Recent content in Deploy on ZHB's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 23 Jun 2019 11:25:09 +0800</lastBuildDate><atom:link href="https://blog.gkzhb.top/categories/deploy/index.xml" rel="self" type="application/rss+xml"/><item><title>Anki 自建同步服务器 ankisyncd</title><link>https://blog.gkzhb.top/post/ankisyncd/</link><pubDate>Sun, 23 Jun 2019 11:25:09 +0800</pubDate><guid>https://blog.gkzhb.top/post/ankisyncd/</guid><description>&lt;p>Anki 是一个用于记忆的软件，客户端同时支持电脑端和移动端（除了 iOS 上 AnkiMobile 收费以外都是免费的）。如果要使用同步的功能，使用官方的 AnkiWeb 网速较慢，在同步大量的 media 文件的时候十分痛苦。GitHub 上有牛人实现了 Anki 同步的 API 接口，可以自建同步服务器：&lt;a href="https://github.com/dsnopek/anki-sync-server">dsnopek/anki-sync-server&lt;/a>。不过这个服务端已经很久没有维护过了，在电脑上最新的 Anki 已经无法正常同步了。于是我在 Google 上找到了一篇文章：&lt;a href="http://genedan.com/no-127-ankisyncd-a-custom-sync-server-for-anki-2-1/">ankisyncd – A Custom Sync Server for Anki 2.1 | Gene Dan&amp;rsquo;s Blog&lt;/a>。我按照博客里提供的 &lt;a href="https://github.com/tsudoko/anki-sync-server">tsudoko/anki-sync-server&lt;/a> 对应的文档，成功在自己的 VPS 上搭建了服务器，并且在 Ankidroid 上和 Linux 端 2.1.11 版本的 Anki 上成功同步数据。&lt;/p>
&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>iOS 上 AnkiMobile 不支持自定义同步服务器&lt;/li>
&lt;li>同步服务器没有 AnkiWeb 的网页端访问支持&lt;/li>
&lt;li>ankisyncd 服务器支持 PC 端 Anki 版本 &lt;strong>2.1.1 - 2.1.11&lt;/strong>，但是 2.1.9 版本不支持&lt;/li>
&lt;li>PC 端最新版 Anki 因为更新了同步协议，而目前开源同步服务端并没有更新到新的协议，所以要使用自建服务器，请务必&lt;strong>使用老版 Anki&lt;/strong>&lt;/li>
&lt;li>另 AnkiDroid 似乎在 2.10 版本之后会要求使用 HTTPS 连接同步服务器，导致 HTTP 服务器无法正常同步&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>想使用最新版 PC 端 Anki 可参考 &lt;a href="https://github.com/tsudoko/anki-sync-server/issues/67">Updating anki-bundled past 2.1.16+ · Issue #67 · tsudoko/anki-sync-server&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>自建”稍后阅读“服务—— wallabag</title><link>https://blog.gkzhb.top/post/wallabag/</link><pubDate>Wed, 03 Apr 2019 21:00:53 +0800</pubDate><guid>https://blog.gkzhb.top/post/wallabag/</guid><description>&lt;p>&amp;ldquo;稍后阅读&amp;quot;英文对应于 &lt;em>Read-It-Later&lt;/em> ，是指将碎片化信息中需要花时间仔细阅读思考或需要二次阅读消化的内容收集起来，待空余时间统一消化理解。国外这方面的知名应用服务商有 Pocket、 Instapaper 以及我之前一直使用的网速慢而且标签功能有 bug 的 Ioreader 等。由于国外服务商在国内网速较慢，而国内的也没找到附合心意的服务商，我选择自建服务 wallabag，运行在我的阿里云 VPS 上。&lt;/p></description></item><item><title>使用 ngrok 实现内网穿透（自建 ngrok 服务器）</title><link>https://blog.gkzhb.top/post/ngrok/</link><pubDate>Sat, 16 Mar 2019 19:18:13 +0800</pubDate><guid>https://blog.gkzhb.top/post/ngrok/</guid><description>&lt;p>有时候我希望能直接通过互联网访问到层层路由下的个人电脑，但是在没有固定 IPv4 的情况下很难做到这一点。一个解决方法就是使用内网穿透技术，而我选择用 ngrok 来实现。ngrok 在 1.x 版本时是开源的，到了 2.x 版本就闭源了。因为自建 ngrok 服务器需要将自己生成的证书编译到客户端中，所以只能使用开源的 1.x 版本从源码编译生成。&lt;/p></description></item></channel></rss>